
dist/Release/production/attinyTestButtonBlink.X.production.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00803800  00803800  000002ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000276  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00803800  00803800  000002ea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002ea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000031c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  00000360  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000198a  00000000  00000000  00000380  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000017ac  00000000  00000000  00001d0a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001b2  00000000  00000000  000034b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000aec  00000000  00000000  00003668  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3c 00 	jmp	0x78	; 0x78 <__ctors_end>
   4:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
   8:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
   c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  10:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  14:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  18:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  1c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  20:	0c 94 a0 00 	jmp	0x140	; 0x140 <__vector_8>
  24:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  28:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  2c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  30:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  34:	0c 94 bb 00 	jmp	0x176	; 0x176 <__vector_13>
  38:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  3c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  40:	0c 94 81 00 	jmp	0x102	; 0x102 <__vector_16>
  44:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  48:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  4c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  50:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  54:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  58:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  5c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  60:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  64:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  68:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  6c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  70:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>
  74:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__bad_interrupt>

00000078 <__ctors_end>:
  78:	11 24       	eor	r1, r1
  7a:	1f be       	out	0x3f, r1	; 63
  7c:	cf ef       	ldi	r28, 0xFF	; 255
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	df e3       	ldi	r29, 0x3F	; 63
  82:	de bf       	out	0x3e, r29	; 62

00000084 <__do_copy_data>:
  84:	18 e3       	ldi	r17, 0x38	; 56
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b8 e3       	ldi	r27, 0x38	; 56
  8a:	e6 e7       	ldi	r30, 0x76	; 118
  8c:	f2 e0       	ldi	r31, 0x02	; 2
  8e:	02 c0       	rjmp	.+4      	; 0x94 <__do_copy_data+0x10>
  90:	05 90       	lpm	r0, Z+
  92:	0d 92       	st	X+, r0
  94:	a0 30       	cpi	r26, 0x00	; 0
  96:	b1 07       	cpc	r27, r17
  98:	d9 f7       	brne	.-10     	; 0x90 <__do_copy_data+0xc>

0000009a <__do_clear_bss>:
  9a:	28 e3       	ldi	r18, 0x38	; 56
  9c:	a0 e0       	ldi	r26, 0x00	; 0
  9e:	b8 e3       	ldi	r27, 0x38	; 56
  a0:	01 c0       	rjmp	.+2      	; 0xa4 <.do_clear_bss_start>

000000a2 <.do_clear_bss_loop>:
  a2:	1d 92       	st	X+, r1

000000a4 <.do_clear_bss_start>:
  a4:	a3 30       	cpi	r26, 0x03	; 3
  a6:	b2 07       	cpc	r27, r18
  a8:	e1 f7       	brne	.-8      	; 0xa2 <.do_clear_bss_loop>
  aa:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <main>
  ae:	0c 94 39 01 	jmp	0x272	; 0x272 <_exit>

000000b2 <__bad_interrupt>:
  b2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b6 <led_shiftSend>:
  b6:	20 91 c3 08 	lds	r18, 0x08C3	; 0x8008c3 <__RODATA_PM_OFFSET__+0x7f88c3>
  ba:	25 ff       	sbrs	r18, 5
  bc:	07 c0       	rjmp	.+14     	; 0xcc <led_shiftSend+0x16>
  be:	20 e4       	ldi	r18, 0x40	; 64
  c0:	20 93 c2 08 	sts	0x08C2, r18	; 0x8008c2 <__RODATA_PM_OFFSET__+0x7f88c2>
  c4:	90 93 c4 08 	sts	0x08C4, r25	; 0x8008c4 <__RODATA_PM_OFFSET__+0x7f88c4>
  c8:	80 93 c4 08 	sts	0x08C4, r24	; 0x8008c4 <__RODATA_PM_OFFSET__+0x7f88c4>
  cc:	08 95       	ret

000000ce <time_t0Init>:
  ce:	e0 e0       	ldi	r30, 0x00	; 0
  d0:	fa e0       	ldi	r31, 0x0A	; 10
  d2:	81 e0       	ldi	r24, 0x01	; 1
  d4:	90 e0       	ldi	r25, 0x00	; 0
  d6:	86 a3       	std	Z+38, r24	; 0x26
  d8:	97 a3       	std	Z+39, r25	; 0x27
  da:	82 85       	ldd	r24, Z+10	; 0x0a
  dc:	81 60       	ori	r24, 0x01	; 1
  de:	82 87       	std	Z+10, r24	; 0x0a
  e0:	80 81       	ld	r24, Z
  e2:	8d 60       	ori	r24, 0x0D	; 13
  e4:	80 83       	st	Z, r24
  e6:	08 95       	ret

000000e8 <time_t1Init>:
  e8:	e0 e8       	ldi	r30, 0x80	; 128
  ea:	fa e0       	ldi	r31, 0x0A	; 10
  ec:	80 e1       	ldi	r24, 0x10	; 16
  ee:	97 e2       	ldi	r25, 0x27	; 39
  f0:	84 87       	std	Z+12, r24	; 0x0c
  f2:	95 87       	std	Z+13, r25	; 0x0d
  f4:	85 81       	ldd	r24, Z+5	; 0x05
  f6:	81 60       	ori	r24, 0x01	; 1
  f8:	85 83       	std	Z+5, r24	; 0x05
  fa:	80 81       	ld	r24, Z
  fc:	83 60       	ori	r24, 0x03	; 3
  fe:	80 83       	st	Z, r24
 100:	08 95       	ret

00000102 <__vector_16>:
 102:	1f 92       	push	r1
 104:	0f 92       	push	r0
 106:	0f b6       	in	r0, 0x3f	; 63
 108:	0f 92       	push	r0
 10a:	11 24       	eor	r1, r1
 10c:	8f 93       	push	r24
 10e:	80 91 c3 08 	lds	r24, 0x08C3	; 0x8008c3 <__RODATA_PM_OFFSET__+0x7f88c3>
 112:	86 ff       	sbrs	r24, 6
 114:	0f c0       	rjmp	.+30     	; 0x134 <__vector_16+0x32>
 116:	80 91 25 04 	lds	r24, 0x0425	; 0x800425 <__RODATA_PM_OFFSET__+0x7f8425>
 11a:	84 60       	ori	r24, 0x04	; 4
 11c:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <__RODATA_PM_OFFSET__+0x7f8425>
 120:	80 91 c3 08 	lds	r24, 0x08C3	; 0x8008c3 <__RODATA_PM_OFFSET__+0x7f88c3>
 124:	80 64       	ori	r24, 0x40	; 64
 126:	80 93 c3 08 	sts	0x08C3, r24	; 0x8008c3 <__RODATA_PM_OFFSET__+0x7f88c3>
 12a:	80 91 26 04 	lds	r24, 0x0426	; 0x800426 <__RODATA_PM_OFFSET__+0x7f8426>
 12e:	84 60       	ori	r24, 0x04	; 4
 130:	80 93 26 04 	sts	0x0426, r24	; 0x800426 <__RODATA_PM_OFFSET__+0x7f8426>
 134:	8f 91       	pop	r24
 136:	0f 90       	pop	r0
 138:	0f be       	out	0x3f, r0	; 63
 13a:	0f 90       	pop	r0
 13c:	1f 90       	pop	r1
 13e:	18 95       	reti

00000140 <__vector_8>:
 140:	1f 92       	push	r1
 142:	0f 92       	push	r0
 144:	0f b6       	in	r0, 0x3f	; 63
 146:	0f 92       	push	r0
 148:	11 24       	eor	r1, r1
 14a:	8f 93       	push	r24
 14c:	9f 93       	push	r25
 14e:	ef 93       	push	r30
 150:	ff 93       	push	r31
 152:	e0 e0       	ldi	r30, 0x00	; 0
 154:	fa e0       	ldi	r31, 0x0A	; 10
 156:	83 85       	ldd	r24, Z+11	; 0x0b
 158:	81 60       	ori	r24, 0x01	; 1
 15a:	83 87       	std	Z+11, r24	; 0x0b
 15c:	81 e0       	ldi	r24, 0x01	; 1
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	86 a3       	std	Z+38, r24	; 0x26
 162:	97 a3       	std	Z+39, r25	; 0x27
 164:	ff 91       	pop	r31
 166:	ef 91       	pop	r30
 168:	9f 91       	pop	r25
 16a:	8f 91       	pop	r24
 16c:	0f 90       	pop	r0
 16e:	0f be       	out	0x3f, r0	; 63
 170:	0f 90       	pop	r0
 172:	1f 90       	pop	r1
 174:	18 95       	reti

00000176 <__vector_13>:
 176:	1f 92       	push	r1
 178:	0f 92       	push	r0
 17a:	0f b6       	in	r0, 0x3f	; 63
 17c:	0f 92       	push	r0
 17e:	11 24       	eor	r1, r1
 180:	8f 93       	push	r24
 182:	9f 93       	push	r25
 184:	ef 93       	push	r30
 186:	ff 93       	push	r31
 188:	e0 e8       	ldi	r30, 0x80	; 128
 18a:	fa e0       	ldi	r31, 0x0A	; 10
 18c:	86 81       	ldd	r24, Z+6	; 0x06
 18e:	81 60       	ori	r24, 0x01	; 1
 190:	86 83       	std	Z+6, r24	; 0x06
 192:	80 91 01 38 	lds	r24, 0x3801	; 0x803801 <tBCnt>
 196:	90 91 02 38 	lds	r25, 0x3802	; 0x803802 <tBCnt+0x1>
 19a:	01 96       	adiw	r24, 0x01	; 1
 19c:	80 93 01 38 	sts	0x3801, r24	; 0x803801 <tBCnt>
 1a0:	90 93 02 38 	sts	0x3802, r25	; 0x803802 <tBCnt+0x1>
 1a4:	ff 91       	pop	r31
 1a6:	ef 91       	pop	r30
 1a8:	9f 91       	pop	r25
 1aa:	8f 91       	pop	r24
 1ac:	0f 90       	pop	r0
 1ae:	0f be       	out	0x3f, r0	; 63
 1b0:	0f 90       	pop	r0
 1b2:	1f 90       	pop	r1
 1b4:	18 95       	reti

000001b6 <sendLedAndIncrement>:
 1b6:	90 91 00 38 	lds	r25, 0x3800	; 0x803800 <__DATA_REGION_ORIGIN__>
 1ba:	89 0f       	add	r24, r25
 1bc:	80 93 00 38 	sts	0x3800, r24	; 0x803800 <__DATA_REGION_ORIGIN__>
 1c0:	8f 70       	andi	r24, 0x0F	; 15
 1c2:	21 e0       	ldi	r18, 0x01	; 1
 1c4:	30 e0       	ldi	r19, 0x00	; 0
 1c6:	a9 01       	movw	r20, r18
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <sendLedAndIncrement+0x18>
 1ca:	44 0f       	add	r20, r20
 1cc:	55 1f       	adc	r21, r21
 1ce:	8a 95       	dec	r24
 1d0:	e2 f7       	brpl	.-8      	; 0x1ca <sendLedAndIncrement+0x14>
 1d2:	ca 01       	movw	r24, r20
 1d4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <led_shiftSend>

000001d8 <main>:
 1d8:	60 e0       	ldi	r22, 0x00	; 0
 1da:	81 e6       	ldi	r24, 0x61	; 97
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	0e 94 33 01 	call	0x266	; 0x266 <ccp_write_io>
 1e2:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <__RODATA_PM_OFFSET__+0x7f8420>
 1e6:	83 60       	ori	r24, 0x03	; 3
 1e8:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <__RODATA_PM_OFFSET__+0x7f8420>
 1ec:	0e 94 67 00 	call	0xce	; 0xce <time_t0Init>
 1f0:	0e 94 74 00 	call	0xe8	; 0xe8 <time_t1Init>
 1f4:	80 91 00 04 	lds	r24, 0x0400	; 0x800400 <__RODATA_PM_OFFSET__+0x7f8400>
 1f8:	8a 60       	ori	r24, 0x0A	; 10
 1fa:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <__RODATA_PM_OFFSET__+0x7f8400>
 1fe:	80 91 20 04 	lds	r24, 0x0420	; 0x800420 <__RODATA_PM_OFFSET__+0x7f8420>
 202:	84 60       	ori	r24, 0x04	; 4
 204:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <__RODATA_PM_OFFSET__+0x7f8420>
 208:	80 e2       	ldi	r24, 0x20	; 32
 20a:	80 93 c0 08 	sts	0x08C0, r24	; 0x8008c0 <__RODATA_PM_OFFSET__+0x7f88c0>
 20e:	84 e8       	ldi	r24, 0x84	; 132
 210:	80 93 c1 08 	sts	0x08C1, r24	; 0x8008c1 <__RODATA_PM_OFFSET__+0x7f88c1>
 214:	80 91 c0 08 	lds	r24, 0x08C0	; 0x8008c0 <__RODATA_PM_OFFSET__+0x7f88c0>
 218:	81 60       	ori	r24, 0x01	; 1
 21a:	80 93 c0 08 	sts	0x08C0, r24	; 0x8008c0 <__RODATA_PM_OFFSET__+0x7f88c0>
 21e:	78 94       	sei
 220:	c0 e0       	ldi	r28, 0x00	; 0
 222:	d0 e0       	ldi	r29, 0x00	; 0
 224:	10 92 01 38 	sts	0x3801, r1	; 0x803801 <tBCnt>
 228:	10 92 02 38 	sts	0x3802, r1	; 0x803802 <tBCnt+0x1>
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	0e 94 db 00 	call	0x1b6	; 0x1b6 <sendLedAndIncrement>
 234:	80 91 24 04 	lds	r24, 0x0424	; 0x800424 <__RODATA_PM_OFFSET__+0x7f8424>
 238:	21 97       	sbiw	r28, 0x01	; 1
 23a:	31 f4       	brne	.+12     	; 0x248 <main+0x70>
 23c:	83 60       	ori	r24, 0x03	; 3
 23e:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <__RODATA_PM_OFFSET__+0x7f8424>
 242:	c0 e0       	ldi	r28, 0x00	; 0
 244:	d0 e0       	ldi	r29, 0x00	; 0
 246:	05 c0       	rjmp	.+10     	; 0x252 <main+0x7a>
 248:	8c 7f       	andi	r24, 0xFC	; 252
 24a:	80 93 24 04 	sts	0x0424, r24	; 0x800424 <__RODATA_PM_OFFSET__+0x7f8424>
 24e:	c1 e0       	ldi	r28, 0x01	; 1
 250:	d0 e0       	ldi	r29, 0x00	; 0
 252:	2f e7       	ldi	r18, 0x7F	; 127
 254:	84 e8       	ldi	r24, 0x84	; 132
 256:	9e e1       	ldi	r25, 0x1E	; 30
 258:	21 50       	subi	r18, 0x01	; 1
 25a:	80 40       	sbci	r24, 0x00	; 0
 25c:	90 40       	sbci	r25, 0x00	; 0
 25e:	e1 f7       	brne	.-8      	; 0x258 <main+0x80>
 260:	00 c0       	rjmp	.+0      	; 0x262 <main+0x8a>
 262:	00 00       	nop
 264:	df cf       	rjmp	.-66     	; 0x224 <main+0x4c>

00000266 <ccp_write_io>:
 266:	dc 01       	movw	r26, r24
 268:	28 ed       	ldi	r18, 0xD8	; 216
 26a:	20 93 34 00 	sts	0x0034, r18	; 0x800034 <__RODATA_PM_OFFSET__+0x7f8034>
 26e:	6c 93       	st	X, r22
 270:	08 95       	ret

00000272 <_exit>:
 272:	f8 94       	cli

00000274 <__stop_program>:
 274:	ff cf       	rjmp	.-2      	; 0x274 <__stop_program>
